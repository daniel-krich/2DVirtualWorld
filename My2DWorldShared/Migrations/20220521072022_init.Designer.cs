// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My2DWorldShared.Data;

#nullable disable

namespace My2DWorldShared.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220521072022_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("My2DWorldShared.DataEntities.GameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("SpawnX")
                        .HasColumnType("float");

                    b.Property<float>("SpawnY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapExitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("ArrowAngle")
                        .HasColumnType("float");

                    b.Property<float>("EntranceX")
                        .HasColumnType("float");

                    b.Property<float>("EntranceY")
                        .HasColumnType("float");

                    b.Property<float>("ExitTeleportX")
                        .HasColumnType("float");

                    b.Property<float>("ExitTeleportY")
                        .HasColumnType("float");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("MapExits");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapNpcEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<float>("PositionX")
                        .HasColumnType("float");

                    b.Property<float>("PositionY")
                        .HasColumnType("float");

                    b.Property<float>("ScaleX")
                        .HasColumnType("float");

                    b.Property<float>("ScaleY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.HasIndex("NpcId");

                    b.ToTable("MapNpcs");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("About")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcGameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpcId");

                    b.ToTable("NpcGames");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcSpeechEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("Speech")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NpcId");

                    b.ToTable("NpcSpeeches");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ServerLocationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ServerMaxPlayers")
                        .HasColumnType("int");

                    b.Property<string>("ServerName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ShopName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Admin")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("BodySuit")
                        .HasColumnType("int");

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.Property<int>("Coat")
                        .HasColumnType("int");

                    b.Property<int>("Earings")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("EyeColor")
                        .HasColumnType("int");

                    b.Property<int>("Facial")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("GoldenCoins")
                        .HasColumnType("int");

                    b.Property<int>("Hair")
                        .HasColumnType("int");

                    b.Property<int>("Hat")
                        .HasColumnType("int");

                    b.Property<int>("Hovers")
                        .HasColumnType("int");

                    b.Property<int?>("LastLocationId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Neckless")
                        .HasColumnType("int");

                    b.Property<int>("Officer")
                        .HasColumnType("int");

                    b.Property<int>("Pants")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Shoes")
                        .HasColumnType("int");

                    b.Property<int>("SkinTone")
                        .HasColumnType("int");

                    b.Property<int>("Top")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LastLocationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserInventoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersInventory");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapExitEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapNpcEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.NpcEntity", "Npc")
                        .WithMany()
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcGameEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.NpcEntity", "Npc")
                        .WithMany()
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcSpeechEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.NpcEntity", "Npc")
                        .WithMany()
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopItemEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.ShopEntity", "Shop")
                        .WithMany("ShopItems")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "LastLocation")
                        .WithMany()
                        .HasForeignKey("LastLocationId");

                    b.Navigation("LastLocation");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserInventoryEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.UserEntity", "User")
                        .WithMany("Inventory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopEntity", b =>
                {
                    b.Navigation("ShopItems");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserEntity", b =>
                {
                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
