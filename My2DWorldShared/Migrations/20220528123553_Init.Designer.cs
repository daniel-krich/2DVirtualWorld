// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My2DWorldShared.Data;

#nullable disable

namespace My2DWorldShared.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220528123553_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("My2DWorldShared.DataEntities.GameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "Games/BounceBall",
                            Name = "הקפצת כדור"
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ItemDesc")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "Hairs/HRS_01",
                            ItemDesc = "בלונד",
                            Name = "שיער קוצים",
                            Price = 600,
                            PriceType = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "Hairs/HRS_02",
                            ItemDesc = "שחורה",
                            Name = "תספורת קוקו",
                            Price = 500,
                            PriceType = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            FilePath = "Pants/PNT_01",
                            ItemDesc = "כחול",
                            Name = "ג'ינס",
                            Price = 1500,
                            PriceType = 0,
                            Type = 3
                        },
                        new
                        {
                            Id = 4,
                            FilePath = "Hairs/HRS_03",
                            ItemDesc = "שחורה",
                            Name = "תספורת מדרגה",
                            Price = 600,
                            PriceType = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            FilePath = "Coats/CT_01",
                            ItemDesc = "כחול",
                            Name = "ג'אקט",
                            Price = 3000,
                            PriceType = 0,
                            Type = 5
                        },
                        new
                        {
                            Id = 6,
                            FilePath = "Hovers/HVR_01",
                            ItemDesc = "כחול",
                            Name = "סקייטבורד",
                            Price = 2500,
                            PriceType = 0,
                            Type = 11
                        },
                        new
                        {
                            Id = 7,
                            FilePath = "Facewear/FCW_01",
                            ItemDesc = "רואים את העולם בכחול",
                            Name = "משקפיים",
                            Price = 900,
                            PriceType = 0,
                            Type = 7
                        },
                        new
                        {
                            Id = 8,
                            FilePath = "Hats/HT_01",
                            ItemDesc = "לבן עם שחור",
                            Name = "כובע מצחיה",
                            Price = 1200,
                            PriceType = 0,
                            Type = 6
                        },
                        new
                        {
                            Id = 9,
                            FilePath = "Shoes/SHS_01",
                            ItemDesc = "שחור לבן",
                            Name = "נעלי אופנה",
                            Price = 1200,
                            PriceType = 0,
                            Type = 4
                        },
                        new
                        {
                            Id = 10,
                            FilePath = "Tops/TPS_01",
                            ItemDesc = "בצבעי הקשת",
                            Name = "חולצת פרפרים",
                            Price = 600,
                            PriceType = 0,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            FilePath = "Hovers/HVR_02",
                            ItemDesc = "ירוק להסוואה מושלמת",
                            Name = "טיל בליסטי",
                            Price = 3000,
                            PriceType = 0,
                            Type = 11
                        },
                        new
                        {
                            Id = 12,
                            FilePath = "Hovers/HVR_03",
                            ItemDesc = "כחול ניאון",
                            Name = "הוברבורד",
                            Price = 3500,
                            PriceType = 0,
                            Type = 11
                        },
                        new
                        {
                            Id = 13,
                            FilePath = "Neckwear/NCW_01",
                            ItemDesc = "רק לכוכבים שבינינו",
                            Name = "שרשרת השמש",
                            Price = 2000,
                            PriceType = 0,
                            Type = 8
                        },
                        new
                        {
                            Id = 14,
                            FilePath = "Hats/HT_02",
                            ItemDesc = "אדום",
                            Name = "כובע הפוך",
                            Price = 1500,
                            PriceType = 0,
                            Type = 6
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<float>("SpawnX")
                        .HasColumnType("float");

                    b.Property<float>("SpawnY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "Maps/ForestRoom",
                            Name = "חוות היער",
                            SpawnX = 11f,
                            SpawnY = -1.5f
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "Maps/ForestRoomHub",
                            Name = "חנות חוות היער",
                            SpawnX = 10f,
                            SpawnY = 3f
                        },
                        new
                        {
                            Id = 3,
                            FilePath = "Maps/ForestToCity",
                            Name = "היער אל העיר",
                            SpawnX = 0f,
                            SpawnY = 0f
                        },
                        new
                        {
                            Id = 4,
                            FilePath = "Maps/BridgeConnector",
                            Name = "גשר החיבור",
                            SpawnX = -7f,
                            SpawnY = -0.5f
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapExitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("ArrowAngle")
                        .HasColumnType("float");

                    b.Property<float>("EntranceX")
                        .HasColumnType("float");

                    b.Property<float>("EntranceY")
                        .HasColumnType("float");

                    b.Property<float>("ExitTeleportX")
                        .HasColumnType("float");

                    b.Property<float>("ExitTeleportY")
                        .HasColumnType("float");

                    b.Property<int>("MapExitId")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapExitId");

                    b.HasIndex("MapId");

                    b.ToTable("MapExits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrowAngle = 180f,
                            EntranceX = -9f,
                            EntranceY = 0f,
                            ExitTeleportX = -0.15f,
                            ExitTeleportY = 3f,
                            MapExitId = 2,
                            MapId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArrowAngle = 90f,
                            EntranceX = -13f,
                            EntranceY = -4f,
                            ExitTeleportX = 12f,
                            ExitTeleportY = -2f,
                            MapExitId = 3,
                            MapId = 1
                        },
                        new
                        {
                            Id = 3,
                            ArrowAngle = 0f,
                            EntranceX = -0.15f,
                            EntranceY = 6f,
                            ExitTeleportX = -9f,
                            ExitTeleportY = -2f,
                            MapExitId = 1,
                            MapId = 2
                        },
                        new
                        {
                            Id = 4,
                            ArrowAngle = -80f,
                            EntranceX = 13f,
                            EntranceY = -2f,
                            ExitTeleportX = -12f,
                            ExitTeleportY = -4f,
                            MapExitId = 1,
                            MapId = 3
                        },
                        new
                        {
                            Id = 5,
                            ArrowAngle = 80f,
                            EntranceX = -13f,
                            EntranceY = 2f,
                            ExitTeleportX = 11f,
                            ExitTeleportY = -1f,
                            MapExitId = 4,
                            MapId = 3
                        },
                        new
                        {
                            Id = 6,
                            ArrowAngle = -80f,
                            EntranceX = 13f,
                            EntranceY = 0f,
                            ExitTeleportX = -10f,
                            ExitTeleportY = 0.7f,
                            MapExitId = 3,
                            MapId = 4
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapNpcEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<float>("PositionX")
                        .HasColumnType("float");

                    b.Property<float>("PositionY")
                        .HasColumnType("float");

                    b.Property<float>("ScaleX")
                        .HasColumnType("float");

                    b.Property<float>("ScaleY")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.HasIndex("NpcId");

                    b.ToTable("MapNpcs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MapId = 2,
                            NpcId = 1,
                            PositionX = -12f,
                            PositionY = 2f,
                            ScaleX = -0.95f,
                            ScaleY = 0.95f
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("About")
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Npcs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "היי, אני אדגר,|מוכר הבגדים של הישוב.",
                            FilePath = "Npcs/Edgar",
                            Name = "אדגר ברי"
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcGameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("NpcId");

                    b.ToTable("NpcGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            NpcId = 1
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcSpeechEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("Speech")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.HasKey("Id");

                    b.HasIndex("NpcId");

                    b.ToTable("NpcSpeeches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NpcId = 1,
                            Speech = "חברים, יש סחורה חדשה, אני מציע לכם לבדוק."
                        },
                        new
                        {
                            Id = 2,
                            NpcId = 1,
                            Speech = "יש לי כאן במחסן הרבה ביגוד שבטוח יתאים לכם."
                        },
                        new
                        {
                            Id = 3,
                            NpcId = 1,
                            Speech = "המוטו שלי זה לשרת את הלקוח ברמה הכי טובה שיש."
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ServerLocationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ServerMaxPlayers")
                        .HasColumnType("int");

                    b.Property<string>("ServerName")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServerMaxPlayers = 200,
                            ServerName = "ראשי"
                        },
                        new
                        {
                            Id = 2,
                            ServerMaxPlayers = 20,
                            ServerName = "בדיקות"
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ShopName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Admin")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("BodySuit")
                        .HasColumnType("int");

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.Property<int?>("Coat")
                        .HasColumnType("int");

                    b.Property<int?>("Earings")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("EyeColor")
                        .HasColumnType("int");

                    b.Property<int?>("FacialWear")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("GoldenCoins")
                        .HasColumnType("int");

                    b.Property<int?>("Hair")
                        .HasColumnType("int");

                    b.Property<int?>("Hat")
                        .HasColumnType("int");

                    b.Property<int?>("Hovers")
                        .HasColumnType("int");

                    b.Property<int?>("LastLocationId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("Necklace")
                        .HasColumnType("int");

                    b.Property<int>("Officer")
                        .HasColumnType("int");

                    b.Property<int?>("Pants")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<int?>("Shoes")
                        .HasColumnType("int");

                    b.Property<int>("SkinTone")
                        .HasColumnType("int");

                    b.Property<int?>("Top")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LastLocationId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admin = 1,
                            Birthday = new DateTime(2002, 6, 2, 15, 35, 53, 280, DateTimeKind.Local).AddTicks(3712),
                            Cash = 5000,
                            Email = "test@test.com",
                            Exp = 0,
                            EyeColor = 2,
                            Gender = 0,
                            GoldenCoins = 200,
                            Level = 20,
                            Officer = 2,
                            Password = "228228",
                            SkinTone = 4,
                            Username = "Danny"
                        },
                        new
                        {
                            Id = 2,
                            Admin = 0,
                            Birthday = new DateTime(2002, 6, 2, 15, 35, 53, 280, DateTimeKind.Local).AddTicks(3753),
                            Cash = 2340,
                            Email = "test@test123.com",
                            Exp = 0,
                            EyeColor = 4,
                            Gender = 0,
                            GoldenCoins = 264,
                            Level = 10,
                            Officer = 0,
                            Password = "228228",
                            SkinTone = 2,
                            Username = "Daniel"
                        });
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserInventoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersInventory");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapExitEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "MapExit")
                        .WithMany()
                        .HasForeignKey("MapExitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "Map")
                        .WithMany("Exits")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");

                    b.Navigation("MapExit");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapNpcEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "Map")
                        .WithMany("Npcs")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.NpcEntity", "Npc")
                        .WithMany("Placements")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcGameEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.GameEntity", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.NpcEntity", "Npc")
                        .WithMany("Games")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcSpeechEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.NpcEntity", "Npc")
                        .WithMany("Speeches")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopItemEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.ShopEntity", "Shop")
                        .WithMany("ShopItems")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.MapEntity", "LastLocation")
                        .WithMany()
                        .HasForeignKey("LastLocationId");

                    b.Navigation("LastLocation");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserInventoryEntity", b =>
                {
                    b.HasOne("My2DWorldShared.DataEntities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My2DWorldShared.DataEntities.UserEntity", "User")
                        .WithMany("Inventory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.MapEntity", b =>
                {
                    b.Navigation("Exits");

                    b.Navigation("Npcs");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.NpcEntity", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Placements");

                    b.Navigation("Speeches");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.ShopEntity", b =>
                {
                    b.Navigation("ShopItems");
                });

            modelBuilder.Entity("My2DWorldShared.DataEntities.UserEntity", b =>
                {
                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
